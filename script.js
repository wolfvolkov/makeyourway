// Generated by CoffeeScript 1.9.2
(function() {
  var ModelBlock, ModelBlockView, modelBlock, modelView, pos,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ModelBlock = (function(superClass) {
    extend(ModelBlock, superClass);

    function ModelBlock() {
      return ModelBlock.__super__.constructor.apply(this, arguments);
    }

    ModelBlock.prototype.initialize = function() {
      return alert("hello");
    };

    ModelBlock.prototype.defaults = {
      position: {
        top: 0,
        left: 0
      }
    };

    return ModelBlock;

  })(Backbone.Model);

  ModelBlockView = (function(superClass) {
    extend(ModelBlockView, superClass);

    function ModelBlockView() {
      this.doThis = bind(this.doThis, this);
      return ModelBlockView.__super__.constructor.apply(this, arguments);
    }

    ModelBlockView.prototype.initialize = function() {
      return this.model.on('someEvent', this.doThis);
    };

    ModelBlockView.prototype.doThis = function() {};

    return ModelBlockView;

  })(Backbone.View);

  modelBlock = new ModelBlock;

  modelView = new ModelBlockView({
    model: modelBlock
  });

  modelBlock.set({
    'color': 'red'
  });

  pos = modelBlock.get('position');

  console.log(pos.top);

  console.log(modelBlock.get('color'));

  console.log(modelBlock.defaults);

  modelBlock.trigger('someEvent');

}).call(this);
